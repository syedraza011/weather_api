{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { createTheme } from '@mui/material/styles';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styleSheet } from \"react-native-web/dist/index\";\nimport * as location from \"expo-location\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar openWeatherKey = \"1f33270dda9129a9ff6da0dc07457f83\";\nvar url = \"http://api.openweathermap.org/data/2.5/onecall?&units=metric&exclude=minutely&appid=\" + openWeatherKey;\nvar Weather = function Weather() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    forecast = _useState2[0],\n    setForecast = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var loadForecast = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      var _yield$location$reque = yield location.requestBackgroundPermissionsAsync(),\n        status = _yield$location$reque.status;\n      if (status !== \"granted\") {\n        Alert.alert(\"permisison to access location was denied\");\n      }\n      var location = yield location.getCurrentPositionAsync({});\n      var response = yield fetch(url + (\"&lat=\" + location.coords.latitude + \"&lon=\" + location.coords.longitude));\n      var data = yield response.json();\n      if (!response.ok) {\n        Alert.alert(\"Error, Something went wrong\");\n      }\n      useEffect(function () {\n        loadForecast();\n      }, []);\n      if (!forecast) {\n        return _jsx(SafeAreaView, {\n          style: StyleSheet.loading,\n          children: _jsx(ActivityIndicator, {\n            size: \"large\"\n          })\n        });\n      }\n      var current = forecast.current.weather[0];\n    });\n    return function loadForecast() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: function onRefresh() {\n          return loadForecast();\n        }\n      }),\n      style: {\n        marginTop: 50\n      },\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Current Weather\"\n      })\n    })\n  });\n};\nexport default Weather;\nvar styles = styleSheet.create({\n  title: {\n    textAlign: \"center\",\n    fontsize: 36,\n    fontweight: \"bold\",\n    color: \"#c84b31\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","createTheme","ActivityIndicator","Alert","RefreshControl","SafeAreaView","ScrollView","Text","View","styleSheet","location","jsx","_jsx","openWeatherKey","url","Weather","_useState","_useState2","_slicedToArray","forecast","setForecast","_useState3","_useState4","refreshing","setRefreshing","loadForecast","_ref","_asyncToGenerator","_yield$location$reque","requestBackgroundPermissionsAsync","status","alert","getCurrentPositionAsync","response","fetch","coords","latitude","longitude","data","json","ok","style","StyleSheet","loading","children","size","current","weather","apply","arguments","styles","container","refreshControl","onRefresh","marginTop","title","create","textAlign","fontsize","fontweight","color"],"sources":["/Users/jugnoo/Desktop/temp/weather_api/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { createTheme } from '@mui/material/styles';\nimport {\n  ActivityIndicator,\n  Alert,\n  RefreshControl,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  View,\n  styleSheet,\n} from \"react-native\";\nimport * as location from \"expo-location\";\nconst openWeatherKey = \"1f33270dda9129a9ff6da0dc07457f83\";\nlet url = `http://api.openweathermap.org/data/2.5/onecall?&units=metric&exclude=minutely&appid=${openWeatherKey}`;\n\nconst Weather = () => {\n  const [forecast, setForecast] = useState(null);\n  const [refreshing, setRefreshing] = useState(false);\n  const loadForecast = async () => {\n    setRefreshing(true);\n    const { status } = await location.requestBackgroundPermissionsAsync();\n    if (status !== \"granted\") {\n      Alert.alert(\"permisison to access location was denied\");\n    }\n    let location = await location.getCurrentPositionAsync({});\n    const response = await fetch(\n      url + `&lat=${location.coords.latitude}&lon=${location.coords.longitude}`\n    );\n    const data = await response.json();\n\n    if (!response.ok) {\n      Alert.alert(\"Error, Something went wrong\");\n    }\n    useEffect(() => {\n      loadForecast();\n    }, []);\n    if (!forecast) {\n      return (\n        <SafeAreaView style={StyleSheet.loading}>\n          <ActivityIndicator size=\"large\" />\n        </SafeAreaView>\n      );\n    }\n    const current = forecast.current.weather[0]; //getting the current weather\n  };\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView\n        refreshControl={\n          <RefreshControl\n            refreshing={refreshing}\n            onRefresh={() => loadForecast()}\n          />\n        }\n        style={{ marginTop: 50 }}\n      >\n        <Text style={styles.title}>Current Weather</Text>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nexport default Weather;\n\nconst styles = styleSheet.create({\n  title: {\n    textAlign: \"center\",\n    fontsize: 36,\n    fontweight: \"bold\",\n    color: \"#c84b31\",\n  },\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,sBAAsB;AAAC,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,cAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,SASjDC,UAAU;AAEZ,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAC1C,IAAMC,cAAc,GAAG,kCAAkC;AACzD,IAAIC,GAAG,4FAA0FD,cAAgB;AAEjH,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAAgCjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAoCtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAMG,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/BH,aAAa,CAAC,IAAI,CAAC;MACnB,IAAAI,qBAAA,SAAyBlB,QAAQ,CAACmB,iCAAiC,EAAE;QAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MACd,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxB3B,KAAK,CAAC4B,KAAK,CAAC,0CAA0C,CAAC;MACzD;MACA,IAAIrB,QAAQ,SAASA,QAAQ,CAACsB,uBAAuB,CAAC,CAAC,CAAC,CAAC;MACzD,IAAMC,QAAQ,SAASC,KAAK,CAC1BpB,GAAG,cAAWJ,QAAQ,CAACyB,MAAM,CAACC,QAAQ,aAAQ1B,QAAQ,CAACyB,MAAM,CAACE,SAAS,CAAE,CAC1E;MACD,IAAMC,IAAI,SAASL,QAAQ,CAACM,IAAI,EAAE;MAElC,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChBrC,KAAK,CAAC4B,KAAK,CAAC,6BAA6B,CAAC;MAC5C;MACA/B,SAAS,CAAC,YAAM;QACdyB,YAAY,EAAE;MAChB,CAAC,EAAE,EAAE,CAAC;MACN,IAAI,CAACN,QAAQ,EAAE;QACb,OACEP,IAAA,CAACP,YAAY;UAACoC,KAAK,EAAEC,UAAU,CAACC,OAAQ;UAAAC,QAAA,EACtChC,IAAA,CAACV,iBAAiB;YAAC2C,IAAI,EAAC;UAAO;QAAG,EACrB;MAEnB;MACA,IAAMC,OAAO,GAAG3B,QAAQ,CAAC2B,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;IAC7C,CAAC;IAAA,gBA1BKtB,YAAYA,CAAA;MAAA,OAAAC,IAAA,CAAAsB,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0BjB;EACD,OACErC,IAAA,CAACP,YAAY;IAACoC,KAAK,EAAES,MAAM,CAACC,SAAU;IAAAP,QAAA,EACpChC,IAAA,CAACN,UAAU;MACT8C,cAAc,EACZxC,IAAA,CAACR,cAAc;QACbmB,UAAU,EAAEA,UAAW;QACvB8B,SAAS,EAAE,SAAAA,UAAA;UAAA,OAAM5B,YAAY,EAAE;QAAA;MAAC,EAEnC;MACDgB,KAAK,EAAE;QAAEa,SAAS,EAAE;MAAG,CAAE;MAAAV,QAAA,EAEzBhC,IAAA,CAACL,IAAI;QAACkC,KAAK,EAAES,MAAM,CAACK,KAAM;QAAAX,QAAA,EAAC;MAAe;IAAO;EACtC,EACA;AAEnB,CAAC;AAED,eAAe7B,OAAO;AAEtB,IAAMmC,MAAM,GAAGzC,UAAU,CAAC+C,MAAM,CAAC;EAC/BD,KAAK,EAAE;IACLE,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}